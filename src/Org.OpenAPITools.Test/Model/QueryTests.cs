/*
 * SysML v2 API and Services
 *
 * REST/HTTP binding (PSM) for the SysML v2 standard API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing Query
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class QueryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Query
        //private Query instance;

        public QueryTests()
        {
            // TODO uncomment below to create an instance of Query
            //instance = new Query();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Query
        /// </summary>
        [Fact]
        public void QueryInstanceTest()
        {
            // TODO uncomment below to test "IsType" Query
            //Assert.IsType<Query>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'OwningProject'
        /// </summary>
        [Fact]
        public void OwningProjectTest()
        {
            // TODO unit test for the property 'OwningProject'
        }

        /// <summary>
        /// Test the property 'Scope'
        /// </summary>
        [Fact]
        public void ScopeTest()
        {
            // TODO unit test for the property 'Scope'
        }

        /// <summary>
        /// Test the property 'Select'
        /// </summary>
        [Fact]
        public void SelectTest()
        {
            // TODO unit test for the property 'Select'
        }

        /// <summary>
        /// Test the property 'Where'
        /// </summary>
        [Fact]
        public void WhereTest()
        {
            // TODO unit test for the property 'Where'
        }
    }
}
