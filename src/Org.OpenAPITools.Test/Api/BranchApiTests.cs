/*
 * SysML v2 API and Services
 *
 * REST/HTTP binding (PSM) for the SysML v2 standard API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BranchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BranchApiTests : IDisposable
    {
        private BranchApi instance;

        public BranchApiTests()
        {
            instance = new BranchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BranchApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BranchApi
            //Assert.IsType<BranchApi>(instance);
        }

        /// <summary>
        /// Test DeleteBranchByProjectAndId
        /// </summary>
        [Fact]
        public void DeleteBranchByProjectAndIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //Guid branchId = null;
            //var response = instance.DeleteBranchByProjectAndId(projectId, branchId);
            //Assert.IsType<Branch>(response);
        }

        /// <summary>
        /// Test GetBranchesByProject
        /// </summary>
        [Fact]
        public void GetBranchesByProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //string pageAfter = null;
            //string pageBefore = null;
            //int? pageSize = null;
            //var response = instance.GetBranchesByProject(projectId, pageAfter, pageBefore, pageSize);
            //Assert.IsType<List<Branch>>(response);
        }

        /// <summary>
        /// Test GetBranchesByProjectAndId
        /// </summary>
        [Fact]
        public void GetBranchesByProjectAndIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //Guid branchId = null;
            //var response = instance.GetBranchesByProjectAndId(projectId, branchId);
            //Assert.IsType<Branch>(response);
        }

        /// <summary>
        /// Test PostBranchByProject
        /// </summary>
        [Fact]
        public void PostBranchByProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //Branch body = null;
            //var response = instance.PostBranchByProject(projectId, body);
            //Assert.IsType<Branch>(response);
        }
    }
}
